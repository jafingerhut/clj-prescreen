From a239648ef83770999b986f79c69c1cef6064ba9f Mon Sep 17 00:00:00 2001
From: Tassilo Horn <tassilo@member.fsf.org>
Date: Thu, 10 May 2012 20:01:13 +0200
Subject: [PATCH 2/2] Add initial reducers tests.

---
 src/script/run_tests.clj               |    1 +
 test/clojure/test_clojure/reducers.clj |   41 ++++++++++++++++++++++++++++++++
 2 files changed, 42 insertions(+), 0 deletions(-)
 create mode 100644 test/clojure/test_clojure/reducers.clj

diff --git a/src/script/run_tests.clj b/src/script/run_tests.clj
index 1aa8b99..8742c7d 100755
--- a/src/script/run_tests.clj
+++ b/src/script/run_tests.clj
@@ -39,6 +39,7 @@ clojure.test-clojure.printer
 clojure.test-clojure.protocols
 clojure.test-clojure.protocols.hash-collisions
 clojure.test-clojure.reader
+clojure.test-clojure.reducers
 clojure.test-clojure.reflect
 clojure.test-clojure.refs
 clojure.test-clojure.repl
diff --git a/test/clojure/test_clojure/reducers.clj b/test/clojure/test_clojure/reducers.clj
new file mode 100644
index 0000000..1123c36
--- /dev/null
+++ b/test/clojure/test_clojure/reducers.clj
@@ -0,0 +1,41 @@
+;   Copyright (c) Rich Hickey. All rights reserved.
+;   The use and distribution terms for this software are covered by the
+;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)
+;   which can be found in the file epl-v10.html at the root of this distribution.
+;   By using this software in any fashion, you are agreeing to be bound by
+;   the terms of this license.
+;   You must not remove this notice, or any other, from this software.
+
+;; Author: Tassilo Horn
+
+(ns clojure.test-clojure.reducers
+  (:require [clojure.core.reducers :as r])
+  (:use clojure.test))
+
+(defmacro defequivtest
+  ;; f is the core fn, r is the reducers equivalent, rt is the reducible ->
+  ;; coll transformer
+  [name [f r rt] fns]
+  `(deftest ~name
+     (let [c# (range -100 1000)]
+       (doseq [fn# ~fns]
+         (is (= (~f fn# c#)
+                (~rt (~r fn# c#))))))))
+
+(defequivtest test-map
+  [map r/map #(into [] %)]
+  [inc dec #(Math/sqrt (Math/abs %))])
+
+(defequivtest test-mapcat
+  [mapcat r/mapcat #(into [] %)]
+  [(fn [x] [x])
+   (fn [x] [x (inc x)])
+   (fn [x] [x (inc x) x])])
+
+(defequivtest test-reduce
+  [reduce r/reduce identity]
+  [+' *'])
+
+(defequivtest test-filter
+  [filter r/filter #(into [] %)]
+  [even? odd? #(< 200 %) identity])
-- 
1.7.8.6

