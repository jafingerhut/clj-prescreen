diff --git src/clj/clojure/pprint/cl_format.clj src/clj/clojure/pprint/cl_format.clj
index ef5c981..6f85df5 100644
--- src/clj/clojure/pprint/cl_format.clj
+++ src/clj/clojure/pprint/cl_format.clj
@@ -564,6 +564,30 @@ Note this should only be used for the last one in the sequence"
       ["0" 0]
       [m2 (- (Integer/valueOf e) delta)])))
 
+(defn- ^String inc-s
+  "Increments string which is represented a number. 
+  Examples: 
+    1000 -> 1001
+    1009 -> 1010
+    1099 -> 1100
+    999  -> 1000
+    0099 -> 0100
+    0098 -> 0099"
+  [^String s]
+  (let [v (vec s)]
+    (loop [v v r ""]
+      (let [c (inc (int (peek v)))] ; Increment last digit.
+        (cond 
+          ; If digit wasn't 9 then a result is returned.
+          (and (< 47 c) (> 58 c)) (str (reduce str "" (pop v)) (char c) r)
+
+          ; For number like this "-999". Is this really needed? Are there examples?
+          ; (and (= (count v) 1) (= \- (peek v))) (str "-10" r)
+
+          ; For numbers like this "999"
+          (empty? (pop v)) (str "10" r)
+          :else (recur (pop v) (str "0" r)))))))
+
 (defn- round-str [m e d w]
   (if (or d w)
     (let [len (count m)
@@ -582,11 +606,7 @@ Note this should only be used for the last one in the sequence"
             (let [round-char (nth m1 round-pos)
                   ^String result (subs m1 0 round-pos)]
               (if (>= (int round-char) (int \5))
-                (let [result-val (Integer/valueOf result)
-                      leading-zeros (subs result 0 (min (prefix-count result \0) (- round-pos 1)))
-                      round-up-result (str leading-zeros
-                                           (String/valueOf (+ result-val 
-                                                              (if (neg? result-val) -1 1))))
+                (let [round-up-result (inc-s result)
                       expanded (> (count round-up-result) (count result))]
                   [round-up-result e1 expanded])
                 [result e1 false]))
diff --git test/clojure/test_clojure/pprint/test_cl_format.clj test/clojure/test_clojure/pprint/test_cl_format.clj
index 8a95104..a90716a 100644
--- test/clojure/test_clojure/pprint/test_cl_format.clj
+++ test/clojure/test_clojure/pprint/test_cl_format.clj
@@ -210,6 +210,11 @@
   (cl-format nil "~3f" -1) "-1."
   (cl-format nil "~4f" -1) "-1.0"
   (cl-format nil "~8f" -1) "    -1.0"
+  (cl-format nil "~8f" -1) "    -1.0"
+  (cl-format nil "~12,10f" 1.00000000074) "1.0000000007"
+  (cl-format nil "~12,10f" 1.00000000076) "1.0000000008"
+  (cl-format nil "~13,10f" -1.00000000074) "-1.0000000007"
+  (cl-format nil "~13,10f" -1.00000000076) "-1.0000000008"
   (cl-format nil "~1,1f" 0.1) ".1")
 
 (simple-tests ampersand-tests
