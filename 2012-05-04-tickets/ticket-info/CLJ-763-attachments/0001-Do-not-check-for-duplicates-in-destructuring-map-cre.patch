From 3fbee875be8478082d6108912a1f9141a9bded13 Mon Sep 17 00:00:00 2001
From: Meikel Brandmeyer <mb@kotka.de>
Date: Tue, 24 Apr 2012 00:55:58 +0200
Subject: [PATCH 1/1] Do not check for duplicates in destructuring map
 creation

---
 src/clj/clojure/core.clj              |    2 +-
 test/clojure/test_clojure/special.clj |    5 +++++
 2 files changed, 6 insertions(+), 1 deletions(-)

diff --git a/src/clj/clojure/core.clj b/src/clj/clojure/core.clj
index 336be78..94fb72b 100644
--- a/src/clj/clojure/core.clj
+++ b/src/clj/clojure/core.clj
@@ -3927,7 +3927,7 @@
                        (let [gmap (or (:as b) (gensym "map__"))
                              defaults (:or b)]
                          (loop [ret (-> bvec (conj gmap) (conj v)
-                                        (conj gmap) (conj `(if (seq? ~gmap) (apply hash-map ~gmap) ~gmap)))
+                                        (conj gmap) (conj `(if (seq? ~gmap) (clojure.lang.PersistentHashMap/create ~gmap) ~gmap)))
                                 bes (reduce1
                                      (fn [bes entry]
                                        (reduce1 #(assoc %1 %2 ((val entry) %2))
diff --git a/test/clojure/test_clojure/special.clj b/test/clojure/test_clojure/special.clj
index f3a8164..c6f0ab1 100644
--- a/test/clojure/test_clojure/special.clj
+++ b/test/clojure/test_clojure/special.clj
@@ -22,3 +22,8 @@
 ; var
 ; fn
 
+(deftest multiple-keys-in-destructuring
+  (let [foo (fn [& {:keys [x]}] x)
+        bar (fn [& options] (apply foo :x :b options))]
+    (is (= (bar) :b))
+    (is (= (bar :x :a) :a))))
-- 
1.7.4.4

