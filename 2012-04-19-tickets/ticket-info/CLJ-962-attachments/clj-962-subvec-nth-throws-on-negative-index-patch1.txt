From 20a50ff74a82e0c0d991ed49c5301c741707d495 Mon Sep 17 00:00:00 2001
From: Andy Fingerhut <andy_fingerhut@alum.wustl.edu>
Date: Thu, 29 Mar 2012 08:10:12 -0700
Subject: [PATCH] Make nth on subvec throw exception for negative indices

---
 src/jvm/clojure/lang/APersistentVector.java |    2 +-
 test/clojure/test_clojure/vectors.clj       |    8 ++++++++
 2 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/src/jvm/clojure/lang/APersistentVector.java b/src/jvm/clojure/lang/APersistentVector.java
index 2b37379..a1590b3 100644
--- a/src/jvm/clojure/lang/APersistentVector.java
+++ b/src/jvm/clojure/lang/APersistentVector.java
@@ -521,7 +521,7 @@ static class SubVector extends APersistentVector implements IObj{
 	}
 
 	public Object nth(int i){
-		if(start + i >= end)
+		if((start + i >= end) || (i < 0))
 			throw new IndexOutOfBoundsException();
 		return v.nth(start + i);
 	}
diff --git a/test/clojure/test_clojure/vectors.clj b/test/clojure/test_clojure/vectors.clj
index 8d76e3a..f58907e 100644
--- a/test/clojure/test_clojure/vectors.clj
+++ b/test/clojure/test_clojure/vectors.clj
@@ -370,3 +370,11 @@
   (are [r c1] (=vec r (filterv even? c1))
        [] [1 3 5]
        [2 4] [1 2 3 4 5]))
+
+(deftest test-subvec
+  (let [v1 (vec (range 100))
+        v2 (subvec v1 50 57)]
+    (is (thrown? IndexOutOfBoundsException (v2 -1)))
+    (is (thrown? IndexOutOfBoundsException (v2 7)))
+    (is (= (v1 50) (v2 0)))
+    (is (= (v1 56) (v2 6)))))
-- 
1.7.9.2

